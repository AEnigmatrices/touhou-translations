import{a as q,u as z,i as O}from"../assets/js/_onRenderHtml.Cu11H-VZ.js";import{jsx as t,jsxs as o}from"react/jsx-runtime";import{Box as l,Stack as x,Typography as h,TextField as m,Button as B,useTheme as M,Paper as H,Accordion as U,AccordionSummary as D,AccordionDetails as W}from"@mui/material";import A from"@mui/icons-material/ExpandMore";import{useState as J,useRef as V,useCallback as C,useEffect as $}from"react";import{useForm as F}from"react-hook-form";import"react-dom/server";import"vike/server";import"@emotion/react";import"@emotion/server/create-instance";import"@emotion/cache";import"vike/client/router";import"@mui/material/useScrollTrigger";import"@mui/icons-material/Menu";import"@mui/material/styles";/*! src/components/DataForms/PostForm/PostForm.utils.ts [vike:pluginModuleBanner] */const X={"Content-Type":"application/json"},E=e=>e.split(",").map(i=>i.trim()).filter(Boolean),G=e=>e.endsWith(".json")?e:`${e}.json`,K=e=>{if(e.media_metadata){const i=e.media_metadata;return Object.entries(i).map(([s,r])=>{const n=r.m?.includes("png")?"png":"jpg";return`https://i.redd.it/${s}.${n}`})}return e.url?[e.url]:[]},Q=({date:e,reddit:i,urls:s,src:r,desc:n,artistId:u,characterIds:d})=>({date:e,reddit:I(i),url:E(s),src:r,desc:n,artistId:u,characterIds:E(d)}),Y=async e=>{const i=await fetch("/api/posts",{method:"POST",headers:X,body:JSON.stringify(Q(e))}),s=await i.json();if(!i.ok)throw new Error(s.error||"Failed to add post")},Z=e=>{const i=e.trim();return q.some(r=>r.id===i)||"Artist ID does not exist."},I=e=>{if(!e)return"";try{const i=new URL(e);i.hostname==="old.reddit.com"&&(i.hostname="www.reddit.com");const{origin:s,pathname:r}=i,n=r.split("/").filter(Boolean);return n.length>=4&&n[0]==="r"&&n[2]==="comments"?`${s}/${n.slice(0,4).join("/")}`:""}catch{return""}},ee=async e=>{if(!e)return null;try{const i=await fetch(G(e));if(!i.ok)throw new Error("Failed to fetch Reddit data");const r=(await i.json())[0]?.data?.children[0]?.data;if(!r)throw new Error("Invalid Reddit data structure");const n=r.created_utc?r.created_utc*1e3:null,u=r.selftext??"",d=K(r);return{createdDate:n,description:u,imageUrls:d}}catch(i){return console.error("Error fetching Reddit data:",i),null}},j=(e,i)=>{const s=I(e.trim());return i?.some(n=>I(n.reddit)===s)?"This Reddit URL already exists.":!0};/*! src/components/DataForms/PostForm/PostForm.styles.ts [vike:pluginModuleBanner] */const P={containerBox:{maxWidth:900,mx:"auto",p:3},inputBoxSmall:{flex:"1 1 220px",minWidth:220},actionButton:{minWidth:150}};/*! src/components/DataForms/PostForm/PostForm.tsx [vike:pluginModuleBanner] */const te=()=>{const{register:e,handleSubmit:i,reset:s,watch:r,setValue:n,getValues:u,setError:d,clearErrors:g,formState:{errors:a,isSubmitting:T}}=F(),[v,S]=J(!1),c=z(),p=V(null),y=r("reddit"),L=C(b=>{p.current&&clearTimeout(p.current),p.current=setTimeout(()=>{const f=j(b.trim(),c);f!==!0?d("reddit",{type:"validate",message:f}):g("reddit")},500)},[d,g,c]),_=async b=>{try{await Y(b),alert("Post added successfully!"),s()}catch(f){alert(`Error: ${f instanceof Error?f.message:"Unknown error"}`)}},N=async()=>{const b=u("reddit");if(!b){alert("Please enter a Reddit URL first.");return}const f=j(b,c);if(f!==!0){alert(f);return}S(!0);try{const w=await ee(I(b));if(!w){alert("Failed to load Reddit data");return}w.createdDate&&n("date",w.createdDate,{shouldValidate:!0}),w.description&&n("desc",w.description,{shouldValidate:!0}),w.imageUrls?.length&&n("urls",w.imageUrls.join(", "),{shouldValidate:!0})}finally{S(!1)}};return $(()=>{if(!y){g("reddit");return}L(y)},[y,L,g]),t(l,{sx:P.containerBox,children:t("form",{onSubmit:i(_),noValidate:!0,children:o(x,{spacing:4,children:[o(l,{children:[t(h,{variant:"h6",gutterBottom:!0,children:"Post Details"}),o(x,{direction:"row",spacing:2,flexWrap:"wrap",children:[t(l,{sx:P.inputBoxSmall,children:t(m,{label:"UNIX Timestamp",type:"number",error:!!a.date,helperText:a.date?.message,fullWidth:!0,...e("date",{required:"Date is required",valueAsNumber:!0}),slotProps:{inputLabel:{shrink:!!r("date")}}})}),t(l,{sx:P.inputBoxSmall,children:t(m,{label:"Artist ID",error:!!a.artistId,helperText:a.artistId?.message,fullWidth:!0,...e("artistId",{required:"Artist ID is required",validate:Z}),slotProps:{inputLabel:{shrink:!!r("artistId")}}})}),t(l,{sx:P.inputBoxSmall,children:t(m,{label:"Source URL",error:!!a.src,helperText:a.src?.message,fullWidth:!0,...e("src",{required:"Source URL is required"}),slotProps:{inputLabel:{shrink:!!r("src")}}})})]})]}),o(l,{children:[t(h,{variant:"h6",gutterBottom:!0,children:"URLs"}),o(x,{spacing:2,children:[t(m,{label:"Image URLs (comma separated)",error:!!a.urls,helperText:a.urls?.message,fullWidth:!0,...e("urls",{required:"Image URLs are required"}),slotProps:{inputLabel:{shrink:!!r("urls")}}}),t(m,{label:"Character IDs (comma separated)",error:!!a.characterIds,helperText:a.characterIds?.message,fullWidth:!0,...e("characterIds",{required:"Character IDs are required"}),slotProps:{inputLabel:{shrink:!!r("characterIds")}}})]})]}),o(l,{children:[t(h,{variant:"h6",gutterBottom:!0,children:"Description"}),t(m,{label:"Description",error:!!a.desc,helperText:a.desc?.message,multiline:!0,minRows:6,fullWidth:!0,...e("desc",{required:"Description is required"}),slotProps:{inputLabel:{shrink:!!r("desc")}}})]}),o(l,{children:[t(h,{variant:"h6",gutterBottom:!0,children:"Reddit URL"}),t(m,{label:"Reddit URL",error:!!a.reddit,helperText:a.reddit?.message,fullWidth:!0,...e("reddit",{required:"Reddit URL is required"}),slotProps:{inputLabel:{shrink:!!r("reddit")}}})]}),o(x,{direction:"row",spacing:2,justifyContent:"center",flexWrap:"wrap",children:[t(B,{variant:"contained",onClick:N,disabled:v,sx:P.actionButton,children:v?"Loading...":"Fetch from Reddit"}),t(B,{type:"submit",variant:"contained",disabled:T,sx:P.actionButton,children:T?"Submitting...":"Add Post"})]})]})})})};/*! src/components/DataForms/ArtistForm/ArtistForm.utils.ts [vike:pluginModuleBanner] */const re={"Content-Type":"application/json"},ie=/^(https?:\/\/)?(www\.)?x\.com\/.+$/i,ne=/^https?:\/\/(www\.)?pixiv\.net\/.+$/i,se=async e=>{const i=e.trim();return await new Promise(r=>{setTimeout(()=>{r(q.some(n=>n.id===i))},200)})?"Artist ID already exists.":!0},ae=async e=>{const i=await fetch("/api/artists",{method:"POST",headers:re,body:JSON.stringify(e)}),s=await i.json();if(!i.ok)throw new Error(s.error||"Failed to add artist")};/*! src/components/DataForms/ArtistForm/ArtistForm.styles.ts [vike:pluginModuleBanner] */const R={containerBox:{maxWidth:600,mx:"auto",p:3},artistIdBox:{flex:"1 1 220px",minWidth:220},nameBox:{flex:"1 1 220px",minWidth:220},twitterBox:{flex:"1 1 260px",minWidth:260},pixivBox:{flex:"1 1 260px",minWidth:260},submitButton:{minWidth:150}};/*! src/components/DataForms/ArtistForm/ArtistForm.tsx [vike:pluginModuleBanner] */const oe=()=>{const{register:e,handleSubmit:i,reset:s,watch:r,setError:n,clearErrors:u,formState:{errors:d,isSubmitting:g}}=F(),a=r("id"),T=V(null),v=C(c=>{T.current&&clearTimeout(T.current),T.current=setTimeout(async()=>{const p=await se(c.trim());typeof p=="string"&&p.length>0?n("id",{type:"validate",message:p}):u("id")},500)},[n,u]),S=async c=>{const p={id:c.id.trim(),name:c.name.trim(),...c.linkTwitter?.trim()&&{linkTwitter:c.linkTwitter.trim()},...c.linkPixiv?.trim()&&{linkPixiv:c.linkPixiv.trim()}};try{await ae(p),alert("Artist added successfully!"),s()}catch(y){alert(`Error: ${y instanceof Error?y.message:"Unknown error"}`)}};return $(()=>{if(!a){u("id");return}v(a)},[a,v,u]),t(l,{sx:R.containerBox,children:t("form",{onSubmit:i(S),noValidate:!0,children:o(x,{spacing:3,children:[o(l,{children:[t(h,{variant:"h6",gutterBottom:!0,children:"Artist Information"}),o(x,{direction:"row",spacing:2,flexWrap:"wrap",children:[t(l,{sx:R.artistIdBox,children:t(m,{label:"Artist ID",error:!!d.id,helperText:d.id?.message,fullWidth:!0,...e("id",{required:"ID is required"}),slotProps:{inputLabel:{shrink:!!r("id")}}})}),t(l,{sx:R.nameBox,children:t(m,{label:"Name",error:!!d.name,helperText:d.name?.message,fullWidth:!0,...e("name",{required:"Name is required"}),slotProps:{inputLabel:{shrink:!!r("name")}}})})]})]}),o(l,{children:[t(h,{variant:"h6",gutterBottom:!0,children:"Links"}),o(x,{direction:"row",spacing:2,flexWrap:"wrap",children:[t(l,{sx:R.twitterBox,children:t(m,{label:"Twitter Link",error:!!d.linkTwitter,helperText:d.linkTwitter?.message,fullWidth:!0,...e("linkTwitter",{pattern:{value:ie,message:"Invalid Twitter URL"}}),slotProps:{inputLabel:{shrink:!!r("linkTwitter")}}})}),t(l,{sx:R.pixivBox,children:t(m,{label:"Pixiv Link",error:!!d.linkPixiv,helperText:d.linkPixiv?.message,fullWidth:!0,...e("linkPixiv",{pattern:{value:ne,message:"Invalid Pixiv URL"}}),slotProps:{inputLabel:{shrink:!!r("linkPixiv")}}})})]})]}),t(x,{direction:"row",justifyContent:"center",children:t(B,{type:"submit",variant:"contained",disabled:g,sx:R.submitButton,children:g?"Submitting...":"Add Artist"})})]})})})};/*! src/pages/admin/styles.ts [vike:pluginModuleBanner] */const k={adminContainer:{m:4,p:3,bgcolor:"background.paper",borderRadius:1,boxShadow:3},header:{mb:3,color:"primary.main",fontWeight:600},contentTitle:e=>({mb:2,pb:1,borderBottom:`2px solid ${e.palette.primary.light}`,color:"primary.main"}),paperFullHeight:{p:3,height:"100%"},accordionMargin:{mb:2}};/*! src/pages/admin/+Page.tsx [vike:pluginModuleBanner] */const de=()=>{const e=M();return o(x,{sx:k.adminContainer,direction:"column",spacing:3,children:[t(h,{variant:"h4",component:"h2",sx:k.header,children:"Admin Dashboard"}),o(H,{elevation:3,sx:k.paperFullHeight,children:[t(h,{variant:"h6",component:"h3",sx:k.contentTitle(e),children:"Content Submission"}),o(U,{sx:k.accordionMargin,children:[t(D,{expandIcon:t(A,{}),children:t(h,{variant:"subtitle1",children:"Reddit Posts"})}),t(W,{children:t(te,{})})]}),o(U,{children:[t(D,{expandIcon:t(A,{}),children:t(h,{variant:"subtitle1",children:"Artists"})}),t(W,{children:t(oe,{})})]})]})]})},le=Object.freeze(Object.defineProperty({__proto__:null,default:de},Symbol.toStringTag,{value:"Module"}));/*! virtual:vike:pageConfigLazy:server:/src/pages/admin [vike:pluginModuleBanner] */const ke={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onRenderHtml:{type:"standard",definedAtData:{filePathToShowToUser:"/src/renderer/+onRenderHtml.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:O}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/src/pages/admin/+Page.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:le}}};export{ke as configValuesSerialized};
