import{e as y,X as I,r as i,j as e,P as w,B as s,T as l}from"./chunk-CJ1GUuwQ.js";import{I as B,L as p}from"./chunk-DzzNqrBX.js";const t={paper:{p:2,borderRadius:{xs:0,md:2},transition:"all 0.2s ease",cursor:"pointer",boxShadow:"0 2px 8px rgba(0,0,0,0.1)",borderBottom:"1px solid rgba(0, 0, 0, 0.08)","&:hover":{bgcolor:"#f9f9f9",boxShadow:3,transform:"translateY(-2px)"}},linkBox:{display:"flex",alignItems:"center",width:"100%",textDecoration:"none",color:"inherit",cursor:"pointer"},content:{display:"flex",alignItems:"center",gap:2,width:"100%"},textContainer:{flexGrow:1},avatar:r=>({width:r?80:120,height:r?80:120,borderRadius:20,flexShrink:0}),placeholder:r=>({width:r?80:120,height:r?80:120,bgcolor:"#f0f0f0",borderRadius:2,flexShrink:0})},S=({name:r,imageUrl:u,description1:c,description2:d,link:n})=>{const b=y(),o=I(b.breakpoints.up("md")),x=i.useRef(null),[j,m]=i.useState(!1);i.useEffect(()=>{const f=x.current;if(!f)return;const a=new IntersectionObserver(([v])=>{v.isIntersecting&&(m(!0),a.disconnect())},{threshold:.1});return a.observe(f),()=>a.disconnect()},[]);const g=j?e.jsx(B,{src:[u],alt:r,decode:!1,loader:e.jsx(s,{sx:t.placeholder(o),children:e.jsx(p,{})}),unloader:e.jsx(s,{sx:t.placeholder(o),"aria-hidden":!0,children:e.jsx(p,{})}),style:t.avatar(o)}):e.jsx(s,{sx:t.placeholder(o),"aria-hidden":!0}),h=e.jsxs(s,{sx:t.content,children:[g,e.jsxs(s,{sx:t.textContainer,children:[e.jsx(l,{variant:"subtitle1",fontWeight:600,children:r}),c&&e.jsx(l,{variant:"body2",color:"text.secondary",children:c}),d&&e.jsx(l,{variant:"body2",color:"text.secondary",children:d})]})]});return e.jsx(w,{component:"li",elevation:1,role:"listitem","aria-label":`Profile: ${r}`,tabIndex:n?void 0:0,sx:t.paper,children:e.jsx(s,{ref:x,children:n?e.jsx(s,{component:"a",href:n,sx:t.linkBox,children:h}):e.jsx(s,{sx:t.linkBox,children:h})})})};export{S as P};
